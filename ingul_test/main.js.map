{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/car/car.component.css","webpack:///./src/app/components/car/car.component.html","webpack:///./src/app/components/car/car.component.ts","webpack:///./src/app/components/components.module.ts","webpack:///./src/app/components/index.ts","webpack:///./src/app/services/index.ts","webpack:///./src/app/services/storage.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".pit,\\n.lobby {\\n  display: table;\\n  margin: 20px;\\n  box-shadow: 0px 0px 15px #bbb;\\n}\\n\\n.pit {\\n  width: 370px;\\n  height: 370px;\\n  float: left;\\n}\\n\\n.lobby {\\n  width: 45%;\\n  height: 500px;\\n  float: left;\\n}\\n\\n.container {\\n  display: table-cell;\\n  height: 100%;\\n  padding: 20px;\\n  background: rgba(255, 255, 255, 0.9);\\n}\\n\\n.title {\\n  display: table-caption;\\n  padding: 0 0 20px;\\n  font-size: 20px;\\n  text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"pit\\\">\\n  <div class=\\\"title\\\">\\n    Pit\\n  </div>\\n  <div [dragula]=\\\"'bag'\\\" class=\\\"container\\\" id=\\\"pit\\\">\\n    <!-- <div *ngFor=\\\"let car of cars; let i = index\\\">\\n      <car [car]=\\\"car\\\"></car>\\n    </div> -->\\n\\n    <!-- <car name=\\\"car1\\\"></car>\\n    <car name=\\\"car3\\\"></car>\\n    <car name=\\\"car1\\\"></car>\\n    <car name=\\\"car2\\\"></car>\\n    <car name=\\\"car3\\\"></car>\\n    <car name=\\\"car1\\\"></car>\\n    <car name=\\\"car2\\\"></car>\\n    <car name=\\\"car3\\\"></car> -->\\n  </div>\\n</div>\\n\\n<div class=\\\"lobby\\\">\\n  <div class=\\\"title\\\">\\n    Lobby\\n  </div>\\n  <div [dragula]=\\\"'bag'\\\" class=\\\"container\\\" id=\\\"lobby\\\">\\n    <div *ngFor=\\\"let car of cars; let i = index\\\" style=\\\"display: flex\\\">\\n      <car [car]=\\\"car\\\" (onSave)=\\\"saveGrid(value)\\\"></car>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"reset\\\" (click)=\\\"resetData()\\\">Reset</div>\\n\"","import { Component, ViewEncapsulation } from '@angular/core';\nimport { DragulaService } from 'ng2-dragula';\nimport { StorageService, ICar } from './services';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  // encapsulation: ViewEncapsulation.None\n})\nexport class AppComponent {\n  cars: ICar[];\n\n  constructor(\n    private storageService: StorageService,\n    private dragulaService: DragulaService\n  ) {\n    // dragulaService.drag.subscribe((value:any) => {\n    //   console.log('drag', value);\n    //   // this.onDrag(value.slice(1));\n    // });\n    dragulaService.drop.subscribe((value:any) => {\n      console.log('drop', value);\n      // this.onDrag(value.slice(1));\n    });\n\n    this.cars = storageService.getData();\n\n    if (!this.cars.length) {\n      this.initCars();\n    }\n\n    \n  }\n\n  initCars() {\n    const carsMock: ICar[] = [\n      {\n        name: 'car 1',\n        id: 1\n      },\n      {\n        name: 'car 2',\n        id: 2\n      },\n      {\n        name: 'car 3',\n        id: 3\n      },\n      {\n        name: 'car 4',\n        id: 4\n      }\n    ];\n\n    this.storageService.setData(carsMock);\n  }\n\n  resetData(): void {\n    this.storageService.setData([]);\n  }\n\n  saveGrid() {\n    this.storageService.setData(this.cars);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { DragulaModule } from 'ng2-dragula';\nimport { ComponentsModule } from './components/components.module';\nimport { AppComponent } from './app.component';\n\nimport { StorageService } from './services';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    DragulaModule,\n    ComponentsModule\n  ],\n  declarations: [\n    AppComponent\n  ],\n  providers: [\n    StorageService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".car {\\n  display: inline-block;\\n  width: 70px;\\n  height: 70px;\\n  margin: 10px;\\n  border: 1px solid black;\\n  text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"car\\\">\\n  <div [hidden]=\\\"isEditing\\\"\\n       class=\\\"title\\\"\\n       (click)=\\\"editCar()\\\">\\n    {{ car.name }}\\n  </div>\\n  <input [hidden]=\\\"!isEditing\\\" type=\\\"text\\\" [(ngModel)]=\\\"car.name\\\">\\n</div>\\n\"","import { Component, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\nimport { ICar } from '../../services';\n\n@Component({\n  selector: 'car',\n  templateUrl: './car.component.html',\n  styleUrls: ['./car.component.css'],\n  host: {\n    '(keyup.esc)': 'cancel()',\n    '(keyup.enter)': 'save()'\n  }\n})\nexport class CarComponent {\n  @Input() car: ICar;\n  @Output() onSave = new EventEmitter<ICar>();\n\n  isEditing = false;\n\n  private previousName: string;\n\n  constructor(\n    private changeDetectorRef: ChangeDetectorRef\n  ) {\n\n  }\n\n  ngOnInit() {\n    // console.log('this.car', this.car);\n  }\n\n  ngOnChanges(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  editCar() {\n    this.previousName = this.car.name;\n    this.isEditing = true;\n  }\n\n  save() {\n    this.isEditing = false;\n    this.onSave.emit(this.car);\n  }\n\n  cancel() {\n    this.car.name = this.previousName;\n    this.isEditing = false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { DragulaModule } from 'ng2-dragula';\n\nimport {\n  CarComponent\n} from './';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    DragulaModule\n  ],\n  declarations: [\n    CarComponent\n  ],\n  exports: [\n    CarComponent\n  ],\n  providers: [\n    // ExportToFileService,\n  ],\n  entryComponents: []\n})\nexport class ComponentsModule { }\n","export * from './car/car.component';\n","export * from './storage.service';\n","import { Inject, Injectable } from '@angular/core';\n\nexport interface ICar {\n  name: string;\n  id: number;\n}\n\n@Injectable()\nexport class StorageService {\n  cars: ICar[] = [];\n\n  constructor(\n  ) {\n    this.initData();\n  }\n\n  initData(): void {\n    this.cars = this.getFromStorage();\n    console.log('this.cars', this.cars);\n  }\n\n  getData(): ICar[] {\n    return this.cars;\n  }\n\n  setData(cars: ICar[]): void {\n    this.saveToStorage(cars);\n  }\n\n  private getFromStorage(): ICar[] {\n    const cars = JSON.parse(localStorage.getItem('cars'));\n    return cars == null ? [] : cars;\n  }\n\n  private saveToStorage(cars: ICar[]): void {\n    localStorage.setItem('cars', JSON.stringify(cars));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}